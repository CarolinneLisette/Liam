using UnityEngine;
using System.Collections;

public class LiamInput : MonoBehaviour {
	public float walkSpeed;
	public float jumpImpulse;
	public Transform groundCheckPoint;
	public LayerMask whatIsGround;
	public float maxFallSpeed;


	private Rigidbody2D body;
	private Vector2 movement;

	private float horInput;
	private bool jumpInput;
	private bool iAmInTheGround;

	private Animator anim;
	private bool facingRight;
	//====================================
	void Start () {

		this.body = this.GetComponent<Rigidbody2D>();
		this.movement = new Vector2();

		this.iAmInTheGround = false;
		this.anim = this.GetComponent<Animator> ();
		this.facingRight = true;
	}
	
	//======================================
	void Update () {

		this.horInput = Input.GetAxis("Horizontal");
		this.jumpInput = Input.GetKey(KeyCode.Space);

		if ((this.horInput < 0) && (this.facingRight)) {
			this.Flip();
			this.facingRight = false;

		} else if ((this.horInput > 0) && (!this.facingRight)) {
			this.Flip();
			this.facingRight = true;
		}
		this.anim.SetFloat("HorSpeed",Mathf.Abs(this.body.velocity.x));
		this.anim.SetFloat("VertSpeed",Mathf.Abs(this.body.velocity.y));


		if(Physics2D.OverlapCircle(this.groundCheckPoint.position,0.03f, this.whatIsGround)) {

			this.iAmInTheGround = true;
		} else {
			
			this.iAmInTheGround = false;
		}
	
	}
	//=====================================================
	void FixedUpdate(){
		this.movement = this.body.velocity;

		this.movement.x = horInput * walkSpeed;

		if(this.jumpInput && this.iAmInTheGround){

			this.movement.y = jumpImpulse;

		}
		if(!this.iAmInTheGround){

			if (this.movement.y < this.maxFallSpeed) {

				this.movement.y = this.maxFallSpeed;
			}
				
		}
		this.body.velocity = this.movement;

	}
	//=====================================================
	void  Flip(){

		Vector3 scale = this.transform.localScale;
		scale.x *= (-1);
		this.transform.localScale = scale;
	}
}